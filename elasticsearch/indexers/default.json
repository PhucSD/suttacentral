{
    "inherits": ["meta", "acro_to_name_and_uid_auto", "uid_expansion"],
    "index": {
        "settings": {
            "number_of_shards": 1,
            "number_of_replicas": 0,
            "analysis": {
                "filter": {
                    "sanskrit_pali_synonym": {
                        "type": "synonym",
                        "synonyms": [
                            "bhikkhu,bhiksu,bhiksu,bhikksu,biksu,monk => bhikkhu",
                            "bhikkhuni,bhiksuni,bhiksuni,bhikksuni,biksuni,nun => bhikkhuni",
                            "dhamma,dharma => dhamma",
                            "kamma,karma => kamma",
                            "nibbana,nirvana => nibbana"
                        ]
                    }
                },
                "analyzer": {
                    "minimal": {
                        "tokenizer": "icu_tokenizer",
                        "filter": ["icu_normalizer", "lowercase"]
                    },
                    "folding": {
                        "tokenizer": "icu_tokenizer",
                        "filter": ["icu_folding"]
                    }
                }
            }
        },
        "mappings": {
            "text": {
                "properties": {
                    "uid": {
                        "type": "string",
                        "analyzer": "uid_expansion"
                    },
                    "lang": {
                        "type": "string",
                        "analyzer": "uid_expansion"
                    },
                    "root_lang": {
                        "type": "string",
                        "index": "not_analyzed"
                    },
                    "is_root": {
                        "type": "boolean",
                        "index": "not_analyzed"
                    },
                    "author": {
                        "type": "string",
                        "analyzer": "folding"
                    },
                    "content": {
                        "type": "string",
                        "term_vector": "with_positions_offsets",
                        "analyzer": "minimal"
                    },
                    "boost": {
                        "type": "float"
                    },
                    "mtime": {
                        "type": "integer",
                        "index": "not_analyzed"
                    }
                }
            },
            "definition": {
                "properties": {
                    "content": {
                        "type": "string",
                        "term_vector": "with_positions_offsets",
                        "analyzer": "minimal"
                    },
                    "entries": {
                        "type": "nested",
                        "properties": {
                            "priority": {
                                "type": "integer"
                            },
                            "source": {
                                "type": "string",
                                "index": "not_analyzed"
                            },
                            "html_content": {
                                "type": "string",
                                "index": "no"
                            }
                        }
                    },
                    "term": {
                        "type": "string",
                        "index": "not_analyzed",
                        "fields": {
                            "folded": {                            
                                "type": "string",
                                "analyzer": "folding"
                            }
                        }
                    },
                    "gloss": {
                        "type": "string",
                        "index": "not_analyzed"
                    },
                    "number": {
                        "type": "integer"
                    },
                    "boost": {
                        "type": "float"
                    }
                }
            }
        }
    }
}
